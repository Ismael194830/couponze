import { useEffect } from 'react';
import { useDispatch } from 'react-redux';
import { loginSuccess, setAuthChecked } from '../redux/authSlice';

// ๐ ุชู ุฅุฒุงูุฉ ุฏุงูุฉ checkTokenValidity (ูุง ุญุงุฌุฉ ููุงุชุตุงู ุจุงูุจุงู ุฅูุฏ ุงูุขู)

export const useInitialAuthCheck = () => {
  const dispatch = useDispatch();

  useEffect(() => {
    const token = localStorage.getItem('authToken');

    const initializeAuth = () => {
      // ูุฐู ุงูุฏุงูุฉ ุณุชููุฐ ูุฑุฉ ูุงุญุฏุฉ ุนูุฏ ุชุญููู ุงููููู
      
      if (token) {
        // 1. ุฅุฐุง ูุฌุฏ ุชููู (ูุนุชุจุฑู ุตุงูุญุงู ูุคูุชุงู ุทุงููุง ุฃููุง ูุง ูุณุชุทูุน ุงูุชุญูู ูู ุงูุจุงู ุฅูุฏ)
        console.log("Found token in LocalStorage. Assuming user is authenticated.");
        
        // 2. ุงุณุชุนุงุฏุฉ ุญุงูุฉ ุชุณุฌูู ุงูุฏุฎูู ุจุงุณุชุฎุฏุงู ุจูุงูุงุช ูุณุชุฎุฏู ููููุฉ
        // ๐จ ููุงุญุธุฉ: ุจูุง ุฃููุง ูุง ูุณุชุทูุน ุฌูุจ ุงูุจูุงูุงุช ูู ุงูุฎุงุฏูุ ูุณุชุฎุฏู ุจูุงูุงุช ุจุฏููุฉ.
        // ููููู ุชุนุฏูู ูุฐู ุงูุจูุงูุงุช ูุชุดูู ุฃู ุดูุก ุชุญุชุงุฌ ุฅููู ูุงุฌูุฉ ุงููุณุชุฎุฏู
        const dummyUser = { 
            id: 'local_user', 
            name: 'ุงููุณุชุฎุฏู ุงููุญูู', 
            // ูููู ุฅุถุงูุฉ ุฃู ุจูุงูุงุช ุชุญุชุงุฌูุง ุงููุงุฌูุฉ ููุง
        };
        
        dispatch(loginSuccess(dummyUser));

      } else {
        // 3. ูุง ููุฌุฏ ุชููู: ุงูุฅุดุงุฑุฉ ูุงูุชูุงุก ุงูุชุญูู (ุงููุณุชุฎุฏู ุถูู)
        console.log("No token found. User is guest.");
        dispatch(setAuthChecked());
      }
    };
    
    initializeAuth();
    
    // ูุชู ุชุดุบูู ูุฐุง ุงูุชุฃุซูุฑ ูุฑุฉ ูุงุญุฏุฉ ููุท
  }, [dispatch]); 
};
