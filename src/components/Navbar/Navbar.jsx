import { useState } from "react";
import "./Navbar.css";
import { Link } from "react-router-dom";
// ๐ ุงุณุชูุฑุงุฏุงุช Redux ูุงูู Hooks ุงูุฌุฏูุฏุฉ ๐
import { useSelector, useDispatch } from 'react-redux';
import { selectIsAuthenticated, openAuthModal } from '../../redux/authSlice';
import { useLogout } from '../../hooks/useLogout';
import { LuLogIn , LuLogOut } from "react-icons/lu";
import { IoPersonCircleSharp } from "react-icons/io5";

function Navbar() {

  const [activ , setactiv] = useState(1)
  const [isactive , setisactive] = useState(false)
  const [fillter , setfillter] = useState("")

  // 1. ๐ ูุฑุงุกุฉ ุญุงูุฉ ุงููุตุงุฏูุฉ ูู Redux Store
  const isAuthenticated = useSelector(selectIsAuthenticated);
  
  // 2. ๐ ุงุณุชุฏุนุงุก Hook ุงูู Dispatch ููุชุญ ุงููุงูุฐุฉ ุงูููุจุซูุฉ
  const dispatch = useDispatch();

  // 3. ๐ ุงุณุชุฏุนุงุก Hook ุชุณุฌูู ุงูุฎุฑูุฌ
  const handleLogout = useLogout(); 

  // ุฏุงูุฉ ููุชุญ ูุงูุฐุฉ ุงููุตุงุฏูุฉ ุงูููุจุซูุฉ
  const handleLoginClick = () => {
    dispatch(openAuthModal());
  };

  // Search
  return (
    <header className="navbar-container">
      <nav className="navbar-content">
        <div className="navbar-logo-section">
          <a href="/" className="navbar-logo">
            <img src="/logo.webp" alt="" />
          </a>
        </div>
        <div className="navbar-links">
          <ul>
            <li>
              <Link to={"/"} onClick={() => setactiv(1)} className={activ == 1 ? 'activ' : ''}>ุงูุฑุฆูุณูุฉ</Link>
            </li>
            <li>
              <Link to={"/Product"} onClick={() => setactiv(2)} className={activ == 2 ? 'activ' : ''}>ุฌููุน ุงููุชุงุฌุฑ</Link>
            </li>
            <li>
              <Link to={"/ConatctUs"} onClick={() => setactiv(3)} className={activ == 3 ? 'activ' : ''}>ุงุชุตู ุจูุง</Link>
            </li>
          </ul>
        </div>

        <div className="SerthandDest">
          <form className="navbar-search-section">
          <input
            type="text"
            placeholder="ุงูุจุญุซ"
            className="search-input"
            maxLength={15}
            onChange={(e) => setfillter(e.target.value)}
          />
          <Link to={`/Search/${fillter}`}>
          <button type="submit" className="search-icon" aria-label="ุจุญุซ" > 
            ๐
          </button>
          </Link>
        </form>
        <Link to={'/profile'}>
        <IoPersonCircleSharp />
        </Link>

        {/* ๐ 4. ููุทู ุงูุชุจุฏูู ุจูู ุฒุฑ ุงูุฏุฎูู ูุฒุฑ ุงูุฎุฑูุฌ ๐ */}
        {isAuthenticated ? (
          // ุฅุฐุง ูุงู ูุณุฌู ุฏุฎูู: ุฅุธูุงุฑ ุฒุฑ ุชุณุฌูู ุงูุฎุฑูุฌ
          <button 
            className="Login logout-btn" 
            onClick={handleLogout} // ๐ ุฑุจุท ุจุฒุฑ ุชุณุฌูู ุงูุฎุฑูุฌ
            title="ุชุณุฌูู ุงูุฎุฑูุฌ"
          >
            <LuLogOut />
          </button>
        ) : (
          // ุฅุฐุง ูุงู ุถูู: ุฅุธูุงุฑ ุฒุฑ ุชุณุฌูู ุงูุฏุฎูู (Login)
          <button 
            className="Login login-btn" 
            onClick={handleLoginClick} // ๐ ุฑุจุท ุจุฒุฑ ูุชุญ ุงููุงูุฐุฉ ุงูููุจุซูุฉ
            title="ุชุณุฌูู ุงูุฏุฎูู / ุฅูุดุงุก ุญุณุงุจ"
          >
            <LuLogIn />
          </button>
        )}
        </div>
      </nav>
      <nav className="mobileNav">
        <div className="navbar-logo-section">
          <a href="/" className="navbar-logo">
            <img src="/logo.webp" alt="" />
          </a>
        </div>
        <button onClick={() => setisactive(!isactive)}>
          icon
        </button>
        <div className={isactive ? "sidebar" : "sidebaroff"}>
          <button onClick={() => setisactive(!isactive)}>
          x
        </button>
        </div>
      </nav>
    </header>
  );
}

export default Navbar;
